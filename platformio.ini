; PlatformIO Project Configuration File
; Defines same as for Osci

[platformio]
name = Frequency_Tuuner
default_envs = esp32dev
description = Get audio stream via ADC and display frequency for tuning musical instruments
include_dir = .

[env]
;[common]
platform = platformio/espressif32@^6.10.0
board = esp32dev
framework = arduino
board_build.f_cpu = 240000000L
board_build.f_flash = 40000000L
board_build.flash_mode = dio
lib_compat_mode = strict
lib_ldf_mode = chain+
lib_deps = 
	TFT_eSPI @ 2.5.43
	; only for testing "meter": TFT_eWidget
build_flags =
  ;###############################################################
  ; TFT_eSPI library setting here (no need to edit library files):
  ;###############################################################
  -D USER_SETUP_LOADED=1                        ; Set this settings as valid
  -D ILI9341_DRIVER=1                           ; Select ILI9163 driver
  -D TFT_WIDTH=240                              ; Set TFT size
  -D TFT_HEIGHT=320
  -D TFT_MISO=19                                ; Define SPI pins
  -D TFT_MOSI=23
  -D TFT_SCLK=18
  -D TFT_CS=5
  -D TFT_DC=22                                  ; Data/Comand pin
  -D TFT_RST=4                                  ; Reset pin
  -D TOUCH_CS=21								; Chip select pin (T_CS) of touch screen
  -D LOAD_GLCD=1                                ; Load Fonts
  -D LOAD_FONT2=1
  -D LOAD_FONT4=1
  -D LOAD_FONT6=1
  -D LOAD_FONT7=1
  -D LOAD_GFXFF=1
  -D USE_VSPI_PORT=1
  -D SPI_FREQUENCY=40000000                     ; Set SPI frequency
  -D SPI_READ_FREQUENCY=20000000				; Optional reduced SPI frequency for reading TFT
  -D SPI_TOUCH_FREQUENCY=2500000				; The XPT2046 requires a lower SPI clock rate of 2.5MHz so we define that here:
  ; Levels: 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
  -D CORE_DEBUG_LEVEL=3
;
monitor_speed = 115200

[env:esp32dev]
build_type = release ;debug
targets = 
	upload
	monitor
monitor_port = COM4
monitor_filters = esp32_exception_decoder
;build_flags =      ; I do think, that another build_flags cancels those in [env]
;    -DUSE_ESP32
;    -DUSE_ESP32_FRAMEWORK_ARDUINO
;    -DCONFIG_HEAP_TRACING_DEST=HEAP_TRACING_STANDALONE
;    -DCONFIG_HEAP_CORRUPTION_DETECTION=HEAP_POISONING_COMPREHENSIVE
    ; default: -DCONFIG_ARDUINO_LOOP_STACK_SIZE=8192  kann man hier nicht setzen: https://community.platformio.org/t/esp32-stack-configuration-reloaded/20994
    ;-DCONFIG_HEAP_TRACING_STACK_DEPTH=
    ; Levels: 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
;    -DCORE_DEBUG_LEVEL=3
;    -fexceptions
;build_unflags = -fno-exceptions

[env:esp32dev_debug]
build_type = debug
targets = 
	upload
	monitor
monitor_port = COM4
monitor_filters = esp32_exception_decoder
build_flags =
    -DUSE_ESP32
    -DUSE_ESP32_FRAMEWORK_ARDUINO
    ; Levels: 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
    -DCORE_DEBUG_LEVEL=3
    -fexceptions
;build_unflags = -fno-exceptions

[env:esp32_progdebug]
; debugging with ESP-Programmer
build_type = debug
monitor_port = COM8
monitor_filters = esp32_exception_decoder
build_flags =
    -DUSE_ESP32
    -DUSE_ESP32_FRAMEWORK_ARDUINO
	-DCONFIG_HEAP_TRACING_DEST=HEAP_TRACING_STANDALONE
    -DCONFIG_HEAP_CORRUPTION_DETECTION=HEAP_POISONING_COMPREHENSIVE
    ; Levels: 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
    -DCORE_DEBUG_LEVEL=3
    -fexceptions
build_unflags = -fno-exceptions
upload_protocol = esp-prog
debug_tool = esp-prog
debug_init_break = tbreak setup